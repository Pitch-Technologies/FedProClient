<?xml version="1.0" encoding="UTF-8"?>
<project name="build" default="dist.all">
   <property environment="env"/>

   <property name="build.number" value="LOCAL"/>

   <!-- Workaround for machines that have JDK11X64_HOME set instead of JDK11_HOME -->
   <condition property="jdk.home.11" value="${env.JDK11_HOME}">
      <isset property="env.JDK11_HOME"/>
   </condition>
   <condition property="jdk.home.11" value="${env.JDK11X64_HOME}">
      <isset property="env.JDK11X64_HOME"/>
   </condition>

   <property name="dist.dir" value="${basedir}/dist"/>
   <property name="out.dir" value="${basedir}/out"/>
   <property name="lib.dir" value="${basedir}/lib/"/>

   <!-- External includes -->
   <include file="java.xml"/>

   <path id="library.slf4j-nop.classpath">
      <pathelement location="${basedir}/lib/slf4j-nop-2.0.17.jar"/>
   </path>

   <pathconvert property="protobuf-java.jars" refid="library.protobuf-java.classpath" pathsep=" ">
      <map from="${lib.dir}" to=""/>
   </pathconvert>
   <pathconvert property="java-websocket.jars" refid="library.java-websocket.classpath" pathsep=" ">
      <map from="${lib.dir}" to=""/>
   </pathconvert>
   <pathconvert property="slf4j-api.jars" refid="library.slf4j-api.classpath" pathsep=" ">
      <map from="${lib.dir}" to=""/>
   </pathconvert>
   <pathconvert property="slf4j-nop.jars" refid="library.slf4j-nop.classpath" pathsep=" ">
      <map from="${lib.dir}" to=""/>
   </pathconvert>

   <!-- Moving files -->
   <target name="copy.java-websocket.jars">
      <copy todir="${dist.dir}" flatten="true">
         <path refid="library.java-websocket.classpath"/>
      </copy>
   </target>

   <target name="copy.protobuf-java.jars">
      <copy todir="${dist.dir}" flatten="true">
         <path refid="library.protobuf-java.classpath"/>
      </copy>
   </target>

   <target name="copy.slf4j-api.jars">
      <copy todir="${dist.dir}" flatten="true">
         <path refid="library.slf4j-api.classpath"/>
      </copy>
   </target>

   <target name="copy.slf4j-nop.jars">
      <copy todir="${dist.dir}" flatten="true">
         <path refid="library.slf4j-nop.classpath"/>
      </copy>
   </target>

   <!-- Jar targets -->
   <target name="session.jar" depends="java.compile.module.fedproclient_session.production">
      <jar destfile="${dist.dir}/fedpro-session.jar">
         <manifest>
            <attribute name="Class-Path" value="${java-websocket.jars}"/>
            <attribute name="Build-number" value="${build.number}"/>
         </manifest>
         <zipfileset dir="${fedproclient_session.output.dir}" includes="**"/>
      </jar>
   </target>

   <target name="protobuf.jar" depends="java.compile.module.fedproclient_protobuf.production">
      <jar destfile="${dist.dir}/protobuf.jar">
         <manifest>
            <attribute name="Class-Path" value="${protobuf-java.jars}"/>
            <attribute name="Build-number" value="${build.number}"/>
         </manifest>
         <zipfileset dir="${fedproclient_protobuf.output.dir}" includes="**"/>
      </jar>
   </target>

   <target name="client.jar" depends="java.compile.module.fedproclient_client.production">
      <jar destfile="${dist.dir}/fedpro-client-hla4.jar">
         <manifest>
            <attribute name="Class-Path" value="protobuf.jar fedpro-session.jar ${protobuf-java.jars} ${java-websocket.jars} ${slf4j-api.jars} ${slf4j-nop.jars}"/>
            <attribute name="Build-number" value="${build.number}"/>
         </manifest>
         <zipfileset dir="${fedproclient_client.output.dir}" includes="**"/>
         <zipfileset dir="${fedproclient_hla_api.output.dir}" includes="**"/>
         <zipfileset dir="${module.fedproclient_client.basedir}/client/resources" includes="**"/>

         <!-- Add dependencies directly to the jar file -->
         <zipfileset dir="${fedproclient_client_common.output.dir}" includes="**"/>
      </jar>
   </target>

   <target name="evolved_client.jar" depends="java.compile.module.fedproclient_client_evolved.production">
      <jar destfile="${dist.dir}/fedpro-client-evolved.jar">
         <manifest>
            <attribute name="Class-Path" value="protobuf.jar fedpro-session.jar ${protobuf-java.jars} ${java-websocket.jars} ${slf4j-api.jars} ${slf4j-nop.jars}"/>
            <attribute name="Build-number" value="${build.number}"/>
         </manifest>
         <zipfileset dir="${fedproclient_client_evolved.output.dir}" includes="**"/>
         <zipfileset dir="${fedproclient_hla_api.output.dir}" includes="**"/>
         <zipfileset dir="${module.fedproclient_client_evolved.basedir}/client_evolved/resources" includes="**"/>

         <!-- Add dependencies directly to the jar file -->
         <zipfileset dir="${fedproclient_client_common.output.dir}" includes="**"/>
      </jar>
   </target>

   <!-- Distribution targets -->
   <target name="dist.init">
      <mkdir dir="${dist.dir}"/>
   </target>

   <target name="java.session.dist"
           depends="dist.init, session.jar, copy.java-websocket.jars"/>
   <target name="java.protobuf.dist"
           depends="dist.init, protobuf.jar, copy.protobuf-java.jars"/>
   <target name="java.client.dist"
           depends="dist.init, client.jar, copy.protobuf-java.jars, copy.java-websocket.jars"/>
   <target name="java.client_evolved.dist"
           depends="dist.init, evolved_client.jar"/>

   <target name="java.dist.sample" depends="java.compile.module.fedproclient_sample.production, java.compile.module.fedproclient_sample_evolved.production, copy.slf4j-api.jars, copy.slf4j-nop.jars">
      <!-- Hla 4 sample -->
      <property name="dist.sample.dir" value="${dist.dir}/samples/chat-java-hla4-fedpro"/>
      <jar destfile="${dist.sample.dir}/chat-java-hla4-fedpro.jar">
         <manifest>
            <attribute name="Class-Path" value="../../fedpro-client-hla4.jar"/>
            <attribute name="Build-number" value="${build.number}"/>
            <attribute name="Main-Class" value="se.pitch.oss.chat1516_4.Chat"/>
         </manifest>

         <zipfileset dir="${fedproclient_sample.output.dir}" includes="**/Chat.*,**/Chat$*"/>
      </jar>
      <copy todir="${dist.sample.dir}/src">
         <fileset dir="sample/src" includes="**/Chat.java"/>
      </copy>

      <copy file="sample/Chat-hla4.xml" todir="${dist.sample.dir}"/>

      <!-- Async HLA 4 sample -->
      <property name="dist.sample.async.dir" value="${dist.dir}/samples/chat-java-hla4-fedpro-async"/>
      <jar destfile="${dist.sample.async.dir}/chat-java-hla4-fedpro-async.jar">
         <manifest>
            <attribute name="Class-Path" value="../../fedpro-client-hla4.jar"/>
            <attribute name="Build-number" value="${build.number}"/>
            <attribute name="Main-Class" value="se.pitch.oss.chat1516_4.AsyncChat"/>
         </manifest>

         <zipfileset dir="${fedproclient_sample.output.dir}" includes="**/AsyncChat.*,**/AsyncChat$*"/>
      </jar>
      <copy todir="${dist.sample.async.dir}/src">
         <fileset dir="sample/src" includes="**/AsyncChat.java"/>
      </copy>

      <copy file="sample/Chat-hla4.xml" todir="${dist.sample.async.dir}"/>

      <!-- Evolved sample -->
      <property name="dist.sample_evolved.dir" value="${dist.dir}/samples/chat-java-1516e-fedpro"/>
      <jar destfile="${dist.sample_evolved.dir}/chat-java-1516e-fedpro.jar">
         <manifest>
            <attribute name="Class-Path" value="../../fedpro-client-evolved.jar"/>
            <attribute name="Build-number" value="${build.number}"/>
            <attribute name="Main-Class" value="se.pitch.oss.chat1516e.Chat"/>
         </manifest>

         <zipfileset dir="${fedproclient_sample_evolved.output.dir}" includes="**"/>
      </jar>
      <copy todir="${dist.sample_evolved.dir}/src">
         <fileset dir="sample_evolved/src"/>
      </copy>

      <copy file="sample_evolved/Chat-evolved.xml" todir="${dist.sample_evolved.dir}"/>

   </target>

   <target name="dist.java"
           depends="java.session.dist, java.protobuf.dist, java.client.dist, java.client_evolved.dist"/>

   <target name="dist.all" depends="dist.init, dist.java, java.dist.sample"/>

   <!-- Clean -->
   <target name="clean" depends="java.clean">
      <delete dir="${dist.dir}"/>
      <delete dir="${out.dir}"/>
   </target>


</project>
